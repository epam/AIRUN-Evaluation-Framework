metadata:
  scenario_id: 02
  experiment: generate_react_app
  category: component_generation
  repository: repository
evaluation_steps:
  completeness:
    - criteria: Ensure that the API call to https://swapi.dev/api/people is made using axios.
      weight: 1.0
    - criteria: Make sure the data is fetched initially without any input fields.
      weight: 1.0
    - criteria: Ensure a loader or loading indicator is displayed while data is being fetched.
      weight: 1.0
    - criteria: Verify that errors are logged to the console if the API call fails.
      weight: 1.0
    - criteria: Ensure that the fetched characters are displayed in a list format.
      weight: 1.0
    - criteria: Make sure each list item has a unique key derived from the character’s URL.
      weight: 1.0
  accuracy:
    - criteria: Ensure the application does not contain unused imports or code.
      weight: 1.0
    - criteria: Ensure the codebase is structured and follows TypeScript and React best practices (state, hooks, effects).
      weight: 1.0
    - criteria: Ensure the application is free of memory leaks and unnecessary re-renders.
      weight: 1.0
    - criteria: Ensure the application is compatible with the latest version of React and TypeScript.
      weight: 1.0
    - criteria: Ensure the application is free of console errors and warnings.
      weight: 1.0
    - criteria: Ensure app does not access DOM elements to retrieve the values of text fields.
      weight: 1.0
    - criteria: Ensure app does not directly manipulate the DOM outside of React’s virtual DOM.
      weight: 1.0
    - criteria: Ensure app does not overuse refs for DOM access instead of React’s state and props.
      weight: 1.0
    - criteria: Ensure app does not have too many re-renders due to state or prop changes.
      weight: 1.0
    - criteria: Ensure the code is decomposed to the set of the components with using single responsibility
      weight: 1.0
    - criteria: Ensure the code does not contain any duplicates and follow DRY principles
      weight: 1.0
    - criteria: App has the same DOM tree structure and classes as in the original application.
      weight: 1.0
    - criteria: App does correctly use useEffect, avoiding infinite loops.
      weight: 1.0
    - criteria: Confirm that axios is installed and listed as a dependency in package.json.
      weight: 1.0
    - criteria: Verify that the fetched data is stored in a state variable using the useState hook.
      weight: 1.0
    - criteria: Verify that the code is optimized and does not contain any unnecessary parts or TODOs.
      weight: 1.0
    - criteria: Ensure that TypeScript is correctly integrated and used throughout the codebase.
      weight: 1.0
    - criteria: Verify that React.StrictMode is used in index.tsx.
      weight: 1.0
